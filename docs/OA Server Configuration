1) Operating System Configuration
   a) Installation
      Language: English
      Keyboard: English
      Time Zone: Etc/UTC (System clock uses UTC)
      Password: <Root Password>
      Software Selection: Minimal

   b) Configure Yum to use proxy (On Intel environment only)
      proxy variable in /etc/yum.conf
      proxy=http://proxy.jf.intel.com:911

   c) Configure Yum to use local DVD repository (On VM only)
      Insert installation DVD image
      # mount /dev/cdrom /media

      # touch /etc/yum.repos.d/CentOS-DVD.repo
      # vi /etc/yum.repos.d/CentOS-DVD.repo
      [dvd]
      name=CentOS-$releasever - DVD
      baseurl=file:///media
      gpgcheck=1
      gpgkey=file:///media/RPM-GPG-KEY-CentOS-7
      enabled=1

      disable other repositories if required
      enabled=0

      update Yum packages data
      # yum update

   d) Install VM Guest Additions (On VM only)
      /etc/sysconfig/network-scripts/ifcfg-enp0s3
      NM_CONTROLLED=no
      ONBOOT=yes
      # systemctl restart network

      # yum update
      # yum install gcc kernel-devel kernel-headers bzip2 unzip
      # yum install perl-Data-Dumper libaio.x86_64

      # reboot

      # mount -t iso9660 -o ro /dev/cdrom /media
      # /media/VBoxLinuxAdditions.run

      mount shared folder
      # mount -t vboxsf -o rw,uid=1000,gid=1000 <shared folder name> /media

   e) Create limited user account and extract server software inside a user home directory
      # adduser -c 'OnlineAthletics Application Account' <System OA Account / name>
      # passwd onlineathletics 
        New password: <System OA Account / password>
        Retype new password: <System OA Account / password>

      # mkdir /home/onlineathletics/Applications
      # mkdir /home/onlineathletics/Database
      # mkdir /home/onlineathletics/Temporary

      # cp /media/jdk-8u20-linux-x64.tar.gz /home/onlineathletics/Applications/
      # cp /media/glassfish-4.0.zip /home/onlineathletics/Applications/
      # cp /media/mysql-5.7.4-m14-linux-glibc2.5-x86_64.tar.gz /home/onlineathletics/Applications/

      # tar -xzvf /home/onlineathletics/Applications/jdk-8u20-linux-x64.tar.gz -C /home/onlineathletics/Applications/ 
      # unzip /home/onlineathletics/Applications/glassfish-4.0.zip -d /home/onlineathletics/Applications/
      # tar -xzvf /home/onlineathletics/Applications/mysql-5.7.4-m14-linux-glibc2.5-x86_64.tar.gz -C /home/onlineathletics/Applications/ 

      # rm -f /home/onlineathletics/Applications/jdk-8u20-linux-x64.tar.gz
      # rm -f /home/onlineathletics/Applications/glassfish-4.0.zip
      # rm -f /home/onlineathletics/Applications/mysql-5.7.4-m14-linux-glibc2.5-x86_64.tar.gz

      # ln -s /home/onlineathletics/Applications/jdk1.8.0_20 /home/onlineathletics/Applications/jdk1.8.0_latest
      # ln -s /home/onlineathletics/Applications/glassfish4/ /home/onlineathletics/Applications/glassfish
      # ln -s /home/onlineathletics/Applications/mysql-5.7.4-m14-linux-glibc2.5-x86_64 /home/onlineathletics/Applications/mysql

      /home/onlineathletics/.bash_profile
      PATH=$PATH:$HOME/.local/bin:$HOME/bin:$HOME/Applications/glassfish/glassfish/bin:$HOME/Applications/jdk1.8.0_latest/bin:$HOME/Applications/mysql/bin

      # chown -R onlineathletics /home/onlineathletics/
      # chgrp -R onlineathletics /home/onlineathletics/

[ALL OF THE STEPS BELOW PROCESSED UNDER OA ACCOUNT]

4) Copy OnlineAthletics binaries and data
   a) Prepare OnlineAthletics.war, OnlineAthleticsRealm.jar, MySQL Connector and JBCrypt binaries, as well as configuration files
      /home/onlineathletics/Temporary
      [PRODUCTION / VM]
      # cp /media/OnlineAthletics.war /home/onlineathletics/Temporary
      # cp /media/OnlineAthleticsRealm.jar /home/onlineathletics/Temporary
      # cp /media/jBCrypt.jar /home/onlineathletics/Temporary
      # cp /media/mysql-connector-java-5.1.32-bin.jar /home/onlineathletics/Temporary
      # cp /media/my.cnf /home/onlineathletics/Temporary

   b) Create a database dump file
      # ./mysqldump --opt -u <MySQL Root / name> onlineathletics -p > onlineathletics_dump.sql

      Compress database dump file
      [CLIENT]
      # gzip -cq9 onlineathletics_dump.sql > onlineathletics_dump.sql.gz

      Copy compressed database dump and database scheme files to the same temporary directory
      [PRODUCTION / VM]
      # cp /media/onlineathletics.sql /home/onlineathletics/Temporary
      # cp /media/onlineathletics_dump.sql.gz /home/onlineathletics/Temporary

   [PRODUCTION SERVER / VM]

   c) Extract compressed database dump file
      # gunzip -c /home/onlineathletics/Temporary/onlineathletics_dump.sql.gz > /home/onlineathletics/Temporary/onlineathletics_dump.sql

2) MySQL Server Configuration
   [EXECUTE ALL COMMANDS FROM ~/Applications/mysql directory]

   a) Initialize database engine
      # cd ~/Applications/mysql
      # scripts/mysql_install_db --user=onlineathletics --basedir=/home/onlineathletics/Applications/mysql -- datadir=/home/onlineathletics/Database

   b) Configure database engine
      # cp /home/onlineathletics/Temporary/my.cnf /home/onlineathletics/Applications/mysql
      /home/onlineathletics/Applications/mysql/my.cnf

      [mysql]
      # Client #
      port                           = 3306
      socket                         = /home/onlineathletics/Database/mysql.sock

      [mysqld]
      # General #
      user                           = onlineathletics
      default-storage-engine         = InnoDB
      socket                         = /home/onlineathletics/Database/mysql.sock
      pid-file                       = /home/onlineathletics/Database/mysql.pid
      server-id                      = 0

      # MyISAM #
      key-buffer-size                = 32M
      myisam-recover-options         = FORCE,BACKUP

      # Safety #
      max-allowed-packet             = 16M
      max-connect-errors             = 1000000
      # skip-name-resolve
      sql-mode                       = STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
      sysdate-is-now                 = 1
      innodb                         = FORCE
      innodb-strict-mode             = 1
      # restrict MySQL from opening a network socket
      # skip-networking
      # force MySQL to listen only the localhost
      bind-address                   = 127.0.0.1
      # disable of the "Load Data Local Infile" command
      # set-variable                   = local-infile=0

      # Data Storage #
      datadir                        = /home/onlineathletics/Database/

      # Binary Loggings #
      log-bin                        = /home/onlineathletics/Database/mysql-bin
      expire-logs-days               = 14
      sync-binlog                    = 1

      # Caches and Limits #
      tmp-table-size                 = 32M
      max-heap-table-size            = 32M
      query-cache-type               = 0
      query-cache-size               = 0
      max-connections                = 500
      thread-cache-size              = 50
      open-files-limit               = 65535
      table-definition-cache         = 1024
      table-open-cache               = 2048

      # InnoDB #
      innodb-flush-method            = O_DIRECT
      innodb-log-files-in-group      = 2
      innodb-log-file-size           = 32M
      innodb-flush-log-at-trx-commit = 1
      innodb-file-per-table          = 1
      innodb-buffer-pool-size        = 256M

      # Logging #
      log-error                     = /home/onlineathletics/Database/mysql-error.log
      log-queries-not-using-indexes = 1
      slow-query-log                = 1
      slow-query-log-file           = /home/onlineathletics/Database/mysql-slow.log

   c) Reset root password
      # mysqld_safe --defaults-file=/home/onlineathletics/Applications/mysql/my.cnf --skip-grant-tables &

      # mysql -u root -S /home/onlineathletics/Database/mysql.sock
      UPDATE mysql.user SET Password=PASSWORD('<MySQL Root / password>') WHERE User='root';
      FLUSH PRIVILEGES;
      \q

      # mysqladmin -u root shutdown -S /home/onlineathletics/Database/mysql.sock -p

   d) Start MySQL server
      # mysqld_safe --defaults-file=/home/onlineathletics/Applications/mysql/my.cnf & (Linux)
      # support-files/mysql.server start (OS X)

   e) Open MySQL command line tool
      # mysql --user=root -S /home/onlineathletics/Database/mysql.sock -p
      # mysql --user=root -p (OS X)

      On error ERROR 1820 (HY000): You must SET PASSWORD before executing this statement
      $ SET PASSWORD=PASSWORD('<MySQL Root / password>')

   f) Configure user accounts
      Remove all available users
      $ SELECT  User, Host, Password FROM mysql.user;
      $ DROP USER '<MySQL Root / name>'@'<domain>';

      $ CREATE USER '<MySQL Root / name>'@'localhost IDENTIFIED BY '<MySQL Root / password>';
      $ UPDATE mysql.user SET Grant_priv='Y', Super_priv='Y' WHERE User='<MySQL Root / name>';
      $ GRANT ALL ON *.* TO '<MySQL Root / name>'@'localhost';

      Create <MySQL OA> user account and grant permissions
      $ CREATE USER '<MySQL OA / name>'@'localhost' IDENTIFIED BY '<MySQL OA / password>';
      $ GRANT SELECT ON onlineathletics.* TO '<MySQL OA / name>'@'localhost';
      $ GRANT EXECUTE ON onlineathletics.* TO '<MySQL OA / name>'@'localhost';

   g) Remove the test database
      $ DROP DATABASE test;

   h) Remove anonymous and obsolete accounts
      $ SELECT * FROM mysql.user WHERE user="";

      $ SHOW GRANTS FOR ''@'localhost';
      $ SHOW GRANTS FOR ''@'<hostname>';

      $ DROP USER '';

   i) MySQL user table shall looks like following:
      $ SELECT user, host FROM mysql.user;
      +-----------------+-----------+
      | user            | host      |
      +-----------------+-----------+
      | <MySQL Root>    | localhost |
      | <MySQL OA>      | localhost |
      +-----------------+-----------+
      2 rows in set (0.00 sec)

   j) Remove MySQL history
      # cat /dev/null > ~/.mysql_history

   MySQL Usage Summary
      To start MySQL server
      # mysqld_safe --defaults-file=/home/onlineathletics/Applications/mysql/my.cnf & (Linux)
      # support-files/mysql.server start (OS X)

      To open MySQL console
      # mysql -u <MySQL Root / name> -S /home/onlineathletics/Database/mysql.sock -p
      # mysql -u <MySQL Root / name> -p (OS X)

      To shutdown MySQL server
      # mysqladmin -u <MySQL Root / name> shutdown -S /home/onlineathletics/Database/mysql.sock -p

3) GlassFish Configuration
   [OPEN GLASSFISH CONSOLE $ asadmin --user <GlassFish Admin / name>]
   /* for the first start use just asadmin without parameters */

   a) Remove default domain
      $ list-domains
      $ delete-domain
        Enter the value for the domain_name operand> domain1

   b) Create a domain OnlineAthleticsDomain
      $ create-domain OnlineAthleticsDomain
         Enter admin user name> <GlassFish Admin / name>
         Enter the admin password: <GlassFish Admin / password>
         Enter the admin password again: <GlassFish Admin / password>

   c) Start OnlineAthletics domain
      $ start-domain OnlineAthleticsDomain

   d) Temporarily enable secure login (Dev VM only / if required)
      $ enable-secure-admin
        Enter admin user name: <GlassFish Admin / name>
        Enter admin password:> <GlassFish Admin / password>

      $ restart-domain

   e) Add MySQL JDBC driver to Glassfish classpath
      <Glassfish Installation Directory>/glassfish/domains/<domain>/lib
      # cp /home/onlineathletics/Temporary/mysql-connector-java-5.1.32-bin.jar /home/onlineathletics/Applications/glassfish/glassfish/domains/OnlineAthleticsDomain/lib/

   f) Add BCrypt library to Glassfish classpath
      <Glassfish Installation Directory>/glassfish/domains/<domain>/lib
      # cp /home/onlineathletics/Temporary/jBCrypt.jar /home/onlineathletics/Applications/glassfish/glassfish/domains/OnlineAthleticsDomain/lib/

   g) Add OnlineAthletics Realm to Glassfish classpath
      <Glassfish Installation Directory>/glassfish/domains/<domain>/lib
      # cp /home/onlineathletics/Temporary/OnlineAthleticsRealm.jar /home/onlineathletics/Applications/glassfish/glassfish/domains/OnlineAthleticsDomain/lib/

      <Glassfish Installation Directory>/glassfish/domains/<domain>/config/domain.conf
      <java-config> : classpath-suffix="${com.sun.aas.instanceRoot}/lib/OnlineAthleticsRealm.jar"

      $ set "server.java-config.classpath-suffix=${com.sun.aas.instanceRoot}/lib/OnlineAthleticsRealm.jar"

   h) Enable support for OnlineAthletics Realm Login Module
      <Glassfish Installation Directory>/glassfish/domains/<domain>/config/login.conf

      # printf "\nOnlineAthleticsRealm {\n\tcom.onlineathletics.web.auth.OnlineAthleticsLoginModule required;\n};\n" >> /home/onlineathletics/Applications/glassfish/glassfish/domains/OnlineAthleticsDomain/config/login.conf

      OnlineAthleticsRealm {
          com.onlineathletics.web.auth.OnlineAthleticsLoginModule required;
      };  

   i) Create OnlineAthletics JDBC connection pool
      <Glassfish Installation Directory>/glassfish/domains/<domain>/config/domain.conf
      <domain> / <resources>

      $ create-jdbc-connection-pool --datasourceclassname com.mysql.jdbc.jdbc2.optional.MysqlDataSource --restype javax.sql.DataSource --property User=<MySQL OA / name>:Password=<MySQL OA / password>:URL="jdbc\:mysql\://localhost\:3306/onlineathletics":NoAccessToProcedureBodies=true --description "OnlineAthletics JDBC Connection Pool" OnlineAthleticsPool

      <jdbc-connection-pool datasource-classname="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" res-type="javax.sql.DataSource" description="OnlineAthletics JDBC Connection Pool" name="OnlineAthleticsPool">
        <property name="User" value="<MySQL OA / name>"></property>
        <property name="Password" value="<MySQL OA / password>"></property>
        <property name="URL" value="jdbc:mysql://localhost:3306/onlineathletics"></property>
        <property name="NoAccessToProcedureBodies" value="true"></property>
      </jdbc-connection-pool>
      <jdbc-resource pool-name="OnlineAthleticsPool" description="OnlineAthletics JDBC Resource" jndi-name="jdbc/OnlineAthletics"></jdbc-resource>

   j) Create OnlineAthletics JDBC resource
      $ create-jdbc-resource --connectionpoolid OnlineAthleticsPool --description "OnlineAthletics JDBC Resource" jdbc/OnlineAthletics

   k) Add OnlineAthletics Realm
      <Glassfish Installation Directory>/glassfish/domains/<domain>/config/domain.conf
      <domain> / <configs> / <config name="server-config"> / <security-service>

      $ create-auth-realm --classname com.onlineathletics.web.auth.OnlineAthleticsRealm --property jaas-context=OnlineAthleticsRealm:User=<MySQL OA Account / name>:Password=<MySQL OA Account / password> OnlineAthleticsRealm

      <auth-realm name="OnlineAthleticsRealm" classname="com.onlineathletics.web.auth.OnlineAthleticsRealm">
        <property name="jaas-context" value="OnlineAthleticsRealm"></property>
      </auth-realm>

    l) Change GlassFish http/https ports from 8080/8181 to 80/443 (Prod only)
       glassfish/domains/domain1/config/domain.xml

       $ set server-config.network-config.network-listeners.network-listener.http-listener-1.port=80
       $ set server-config.network-config.network-listeners.network-listener.http-listener-2.port=443

    m) Set log level
       $ set-log-levels com.onlineathletics.web.auth.OnlineAthleticsRealm=FINEST

    n) Deploy OnlineAthletics
       $ deploy /home/onlineathletics/Temporary/OnlineAthletics.war

    o) Set OnlineAthletics as dfeult web module
       $ set server.http-service.virtual-server.server.default-web-module=OnlineAthletics

    p) Finish GlassFish configuration
       $ disable-secure-admin (Prod only)
       $ restart-domain

4) Initialize OnlineAthletics database and website
   d) Create database
      # mysql --user=<MySQL Root / name> -S /home/onlineathletics/Database/mysql.sock -p<MySQL Root / password> onlineathletics < /home/onlineathletics/Temporary/onlineathletics.sql

   e) Restore database
      # mysql --user=<MySQL Root / name> -S /home/onlineathletics/Database/mysql.sock -p<MySQL Root / password> onlineathletics < onlineathletics_dump.sql

   c) Remove history
      # cat /dev/null > ~/.mysql_history
      # cat /dev/null > ~/.bash_history

5) Improve SSH securoty
   a) Only use SSH Protocol 2
      /etc/ssh/sshd_config
      Protocol 2

   b) Limit users' SSH access
      /etc/ssh/sshd_config
      AllowUsers <System OA Account / name>

   c) Configure idle log out timeout interval
      /etc/ssh/sshd_config
      ClientAliveInterval 100
      ClientAliceCountMax 0

   d) Disable .rhost files
      /etc/ssh/sshd_config
      IgnoreRhosts yes

   e) Disable host-based authentication
      /etc/ssh/sshd_config
      HostbasedAuthentication no

   f) Disable root login
      /etc/ssh/sshd_config
      PermitRootLogin no

   g) Enable a warning banner
      /etc/ssh/sshd_config
      Banner /etc/issue

      /etc/issue
      [some text]

   h) Change SSH port 
      /etc/ssh/sshd_config
      Port 104

      # semanage port -a -t ssh_port_t -p tcp 104 (SELinux enabled only)

   i) Disable empty passwords
      /etc/ssh/sshd_config
      PermitEmptyPasswords no

   j) Use key-based authentication only
      Disable standard password authentication
      /etc/ssh/sshd_config
      PasswordAuthentication no

   k) Disable GSSAPI authentication
      /etc/ssh/sshd_config
      GSSAPIAuthentication no

   l) Generate RSA key pair (host)
      # ssh-keygen -t rsa

      Enter file in which to save the key (/Users/andrey/.ssh/id_rsa): <~/.ssh>id_rsa_onlineathletics
      Enter passphrase (empty for no passphrase): <Password>

   m) Change the permissions of the ~/.ssh/ (host and client)
      # chmod 700 ~/.ssh

   n) Add public key to user agent (host)
      # ssh-add ~/.ssh/id_rsa_onlineathletics

   o) Copy the content of ~/.ssh/id_rsa,pub into ~/.ssh/authorized_keys on the machine to which you want to connect, appending it to its end if the file already exists
      # ssh-copy-id <System OA Account>@<hostname> (when available)

      # ssh onlineathletics@192.168.56.102 'mkdir ~/.ssh/; touch ~/.ssh/authorized_keys'
      # cat ~/.ssh/id_rsa_onlineathletics.pub | ssh onlineathletics@192.168.56.102 'cat >> ~/.ssh/authorized_keys'

   p) Change the permissions of the ~/.ssh/authorized_keys (client)
      # chmod 600 ~/.ssh/authorized_keys

   q) Restart SSH service
      # systemctl restart sshd